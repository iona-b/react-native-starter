{"ast":null,"code":"var _jsxFileName = \"/Users/ionabrabender/Documents/Coding Courses/rn-starter/src/screens/ComponentsScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar ComponentsScreen = function ComponentsScreen() {\n  var name = \"Iona\";\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"My First React App!\"), React.createElement(Text, {\n    style: styles.subHeaderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Hi there! I'm \", name, \"!\"));\n};\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30\n  },\n  headerStyle: {\n    fontSize: 45\n  },\n  subHeaderStyle: {\n    fontSize: 20\n  }\n});\nexport default ComponentsScreen;","map":{"version":3,"sources":["/Users/ionabrabender/Documents/Coding Courses/rn-starter/src/screens/ComponentsScreen.js"],"names":["React","ComponentsScreen","name","styles","headerStyle","subHeaderStyle","StyleSheet","create","textStyle","fontSize"],"mappings":";AAMA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAMA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAE3B,MAAMC,IAAI,GAAG,MAAb;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoDH,IAApD,MANJ,CADJ;AAcH,CAlBD;;AAoBA,IAAMC,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAM7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GANkB;AAU7BL,EAAAA,WAAW,EAAE;AACTK,IAAAA,QAAQ,EAAE;AADD,GAVgB;AAc7BJ,EAAAA,cAAc,EAAE;AACZI,IAAAA,QAAQ,EAAE;AADE;AAda,CAAlB,CAAf;AAoBA,eAAeR,gBAAf","sourcesContent":["// For each component, we need: \n// 1. Libraries to create component.\n// 2. Components: Functions that return JSX\n// 3. Stylesheet: To add style or layout to component\n// 4. Export component\n\nimport React from 'react';\nimport { Text, StyleSheet, View } from 'react-native';\n// A Text element is a primitive React element.\n// Other primitive elements are views, images, and buttons.\n// We can use the View element to wrap/nest other elements inside.\n\nconst ComponentsScreen = () => {\n\n    const name = \"Iona\"\n\n    return (\n        <View> \n            {/* <Text style={styles.textStyle} >This is the components screen</Text>\n            <Text>{greeting}</Text> */}\n            {/* Curly braces allow us to refer to regular JS elements */}\n            {/* We cannot show JavaScript objects inside of a text element! */}\n            <Text style={styles.headerStyle} >My First React App!</Text>\n            <Text style={styles.subHeaderStyle} >Hi there! I'm {name}!</Text>\n        </View>\n    );\n    // Babel turns JSX into plain JavaScript code.\n    // babeljs.io allows you to see the JS version on JSX.\n    // We use JSX so our component is more legible and maintainable.\n\n};\n\nconst styles = StyleSheet.create({\n    // We don't have to use StyleSheet.create.\n    // However, it allows us to validate styling rules.\n    // You can pass a styling object into a JSX element, e.g. <Text> style={{ fontSize: 30 }} </Text>\n    // This is called inline styling.\n\n    textStyle: {\n        fontSize: 30\n    },\n\n    headerStyle: {\n        fontSize: 45\n    },\n\n    subHeaderStyle: {\n        fontSize: 20\n    }\n\n});\n\nexport default ComponentsScreen;"]},"metadata":{},"sourceType":"module"}